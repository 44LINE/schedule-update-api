#Connection
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}


# Generating schema script
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=drop.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=script
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-database-schemas=true
#spring.jpa.properties.javax.persistence.database-product-name=postgres
#spring.jpa.properties.javax.persistence.sql-load-script-source=classpath*:

#Context Config
spring.autoconfigure.exclude = org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration 

#Hibernate
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false

#Prevent from crash on lack of host or network
spring.datasource.continue-on-error=true

#Dev
#spring.jpa.show-sql=false
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.type=trace
#logging.level.org.hibernate.stat=error
#spring.jpa.properties.hibernate.generate_statistics=true

#SSL
server.port=8443
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=${SSL_PASSWORD}
server.ssl.key-password=${SSL_PASSWORD}
server.ssl.key-alias=tomcat
security.require.ssl=true
